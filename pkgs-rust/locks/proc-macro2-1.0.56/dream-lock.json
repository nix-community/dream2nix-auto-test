{
  "_generic": {
    "defaultPackage": "proc-macro2",
    "location": "",
    "packages": {
      "proc-macro2": "1.0.56"
    },
    "sourcesAggregatedHash": null,
    "subsystem": "rust"
  },
  "_subsystem": {
    "gitSources": [],
    "meta": {
      "proc-macro2": {
        "1.0.56": {
          "description": "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.", "license": [   "mit",   "asl20"
          ]
        }
      }
    },
    "relPathReplacements": {
      "proc-macro2": {
        "1.0.56": {}
      }
    }
  },
  "cyclicDependencies": {},
  "dependencies": {
    "proc-macro2": {
      "1.0.56": [
        [ "quote", "1.0.27" ],
        [ "rustversion", "1.0.12" ],
        [ "unicode-ident", "1.0.8" ]
      ],
      "1.0.56$crates-io": [
        [ "unicode-ident", "1.0.8" ]
      ]
    },
    "quote": {
      "1.0.27": [
        [ "proc-macro2", "1.0.56$crates-io" ]
      ]
    }
  },
  "sources": {
    "proc-macro2": {
      "1.0.56": {
        "hash": "2b63bdb0cd06f1f4dedf69b254734f9b45af66e4a031e42a7480257d9898b435",
        "type": "crates-io"
      },
      "1.0.56$crates-io": {
        "hash": "2b63bdb0cd06f1f4dedf69b254734f9b45af66e4a031e42a7480257d9898b435",
        "pname": "proc-macro2",
        "type": "crates-io",
        "version": "1.0.56"
      }
    },
    "quote": {
      "1.0.27": {
        "hash": "8f4f29d145265ec1c483c7c654450edde0bfe043d3938d6972630663356d9500",
        "pname": "quote",
        "type": "crates-io",
        "version": "1.0.27"
      }
    },
    "rustversion": {
      "1.0.12": {
        "hash": "4f3208ce4d8448b3f3e7d168a73f5e0c43a61e32930de3bceeccedb388b6bf06",
        "pname": "rustversion",
        "type": "crates-io",
        "version": "1.0.12"
      }
    },
    "unicode-ident": {
      "1.0.8": {
        "hash": "e5464a87b239f13a63a501f2701565754bae92d243d4bb7eb12f6d57d2269bf4",
        "pname": "unicode-ident",
        "type": "crates-io",
        "version": "1.0.8"
      }
    }
  }
}
