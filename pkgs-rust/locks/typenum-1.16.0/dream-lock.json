{
  "_generic": {
    "defaultPackage": "typenum",
    "location": "",
    "packages": {
      "typenum": "1.16.0"
    },
    "sourcesAggregatedHash": null,
    "subsystem": "rust"
  },
  "_subsystem": {
    "gitSources": [],
    "meta": {
      "typenum": {
        "1.16.0": {
          "description": "Typenum is a Rust library for type-level numbers evaluated at\n    compile time. It currently supports bits, unsigned integers, and signed\n    integers. It also provides a type-level array of type-level numbers, but its\n    implementation is incomplete.", "license": [   "mit",   "asl20"
          ]
        }
      }
    },
    "relPathReplacements": {
      "typenum": {
        "1.16.0": {}
      }
    }
  },
  "cyclicDependencies": {},
  "dependencies": {
    "derive_more": {
      "0.99.17": [
        [ "proc-macro2", "1.0.50" ],
        [ "quote", "1.0.23" ],
        [ "syn", "1.0.107" ]
      ]
    },
    "impl-trait-for-tuples": {
      "0.2.2": [
        [ "proc-macro2", "1.0.50" ],
        [ "quote", "1.0.23" ],
        [ "syn", "1.0.107" ]
      ]
    },
    "parity-scale-codec": {
      "2.3.1": [
        [ "arrayvec", "0.7.2" ],
        [ "byte-slice-cast", "1.2.2" ],
        [ "impl-trait-for-tuples", "0.2.2" ],
        [ "parity-scale-codec-derive", "2.3.1" ]
      ]
    },
    "parity-scale-codec-derive": {
      "2.3.1": [
        [ "proc-macro-crate", "1.2.1" ],
        [ "proc-macro2", "1.0.50" ],
        [ "quote", "1.0.23" ],
        [ "syn", "1.0.107" ]
      ]
    },
    "proc-macro-crate": {
      "1.2.1": [
        [ "once_cell", "1.17.0" ],
        [ "thiserror", "1.0.38" ],
        [ "toml", "0.5.10" ]
      ]
    },
    "proc-macro2": {
      "1.0.50": [
        [ "unicode-ident", "1.0.6" ]
      ]
    },
    "quote": {
      "1.0.23": [
        [ "proc-macro2", "1.0.50" ]
      ]
    },
    "scale-info": {
      "1.0.0": [
        [ "cfg-if", "1.0.0" ],
        [ "derive_more", "0.99.17" ],
        [ "parity-scale-codec", "2.3.1" ],
        [ "scale-info-derive", "1.0.0" ]
      ]
    },
    "scale-info-derive": {
      "1.0.0": [
        [ "proc-macro-crate", "1.2.1" ],
        [ "proc-macro2", "1.0.50" ],
        [ "quote", "1.0.23" ],
        [ "syn", "1.0.107" ]
      ]
    },
    "syn": {
      "1.0.107": [
        [ "proc-macro2", "1.0.50" ],
        [ "quote", "1.0.23" ],
        [ "unicode-ident", "1.0.6" ]
      ]
    },
    "thiserror": {
      "1.0.38": [
        [ "thiserror-impl", "1.0.38" ]
      ]
    },
    "thiserror-impl": {
      "1.0.38": [
        [ "proc-macro2", "1.0.50" ],
        [ "quote", "1.0.23" ],
        [ "syn", "1.0.107" ]
      ]
    },
    "toml": {
      "0.5.10": [
        [ "serde", "1.0.152" ]
      ]
    },
    "typenum": {
      "1.16.0": [
        [ "scale-info", "1.0.0" ]
      ]
    }
  },
  "sources": {
    "arrayvec": {
      "0.7.2": {
        "hash": "8da52d66c7071e2e3fa2a1e5c6d088fec47b593032b254f5e980de8ea54454d6",
        "type": "crates-io"
      }
    },
    "byte-slice-cast": {
      "1.2.2": {
        "hash": "c3ac9f8b63eca6fd385229b3675f6cc0dc5c8a5c8a54a59d4f52ffd670d87b0c",
        "type": "crates-io"
      }
    },
    "cfg-if": {
      "1.0.0": {
        "hash": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
        "type": "crates-io"
      }
    },
    "derive_more": {
      "0.99.17": {
        "hash": "4fb810d30a7c1953f91334de7244731fc3f3c10d7fe163338a35b9f640960321",
        "type": "crates-io"
      }
    },
    "impl-trait-for-tuples": {
      "0.2.2": {
        "hash": "11d7a9f6330b71fea57921c9b61c47ee6e84f72d394754eff6163ae67e7395eb",
        "type": "crates-io"
      }
    },
    "once_cell": {
      "1.17.0": {
        "hash": "6f61fba1741ea2b3d6a1e3178721804bb716a68a6aeba1149b5d52e3d464ea66",
        "type": "crates-io"
      }
    },
    "parity-scale-codec": {
      "2.3.1": {
        "hash": "373b1a4c1338d9cd3d1fa53b3a11bdab5ab6bd80a20f7f7becd76953ae2be909",
        "type": "crates-io"
      }
    },
    "parity-scale-codec-derive": {
      "2.3.1": {
        "hash": "1557010476e0595c9b568d16dcfb81b93cdeb157612726f5170d31aa707bed27",
        "type": "crates-io"
      }
    },
    "proc-macro-crate": {
      "1.2.1": {
        "hash": "eda0fc3b0fb7c975631757e14d9049da17374063edb6ebbcbc54d880d4fe94e9",
        "type": "crates-io"
      }
    },
    "proc-macro2": {
      "1.0.50": {
        "hash": "6ef7d57beacfaf2d8aee5937dab7b7f28de3cb8b1828479bb5de2a7106f2bae2",
        "type": "crates-io"
      }
    },
    "quote": {
      "1.0.23": {
        "hash": "8856d8364d252a14d474036ea1358d63c9e6965c8e5c1885c18f73d70bff9c7b",
        "type": "crates-io"
      }
    },
    "scale-info": {
      "1.0.0": {
        "hash": "5c55b744399c25532d63a0d2789b109df8d46fc93752d46b0782991a931a782f",
        "type": "crates-io"
      }
    },
    "scale-info-derive": {
      "1.0.0": {
        "hash": "baeb2780690380592f86205aa4ee49815feb2acad8c2f59e6dd207148c3f1fcd",
        "type": "crates-io"
      }
    },
    "serde": {
      "1.0.152": {
        "hash": "bb7d1f0d3021d347a83e556fc4683dea2ea09d87bccdf88ff5c12545d89d5efb",
        "type": "crates-io"
      }
    },
    "syn": {
      "1.0.107": {
        "hash": "1f4064b5b16e03ae50984a5a8ed5d4f8803e6bc1fd170a3cda91a1be4b18e3f5",
        "type": "crates-io"
      }
    },
    "thiserror": {
      "1.0.38": {
        "hash": "6a9cd18aa97d5c45c6603caea1da6628790b37f7a34b6ca89522331c5180fed0",
        "type": "crates-io"
      }
    },
    "thiserror-impl": {
      "1.0.38": {
        "hash": "1fb327af4685e4d03fa8cbcf1716380da910eeb2bb8be417e7f9fd3fb164f36f",
        "type": "crates-io"
      }
    },
    "toml": {
      "0.5.10": {
        "hash": "1333c76748e868a4d9d1017b5ab53171dfd095f70c712fdb4653a406547f598f",
        "type": "crates-io"
      }
    },
    "typenum": {
      "1.16.0": {
        "hash": "497961ef93d974e23eb6f433eb5fe1b7930b659f06d12dec6fc44a8f554c0bba",
        "type": "crates-io"
      }
    },
    "unicode-ident": {
      "1.0.6": {
        "hash": "84a22b9f218b40614adcb3f4ff08b703773ad44fa9423e4e0d346d5db86e4ebc",
        "type": "crates-io"
      }
    }
  }
}
