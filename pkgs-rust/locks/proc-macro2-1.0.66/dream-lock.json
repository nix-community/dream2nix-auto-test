{
  "_generic": {
    "defaultPackage": "proc-macro2",
    "location": "",
    "packages": {
      "proc-macro2": "1.0.66"
    },
    "sourcesAggregatedHash": null,
    "subsystem": "rust"
  },
  "_subsystem": {
    "gitSources": [],
    "meta": {
      "proc-macro2": {
        "1.0.66": {
          "description": "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.", "license": [   "mit",   "asl20"
          ]
        }
      }
    },
    "relPathReplacements": {
      "proc-macro2": {
        "1.0.66": {}
      }
    }
  },
  "cyclicDependencies": {},
  "dependencies": {
    "proc-macro2": {
      "1.0.66": [
        [ "quote", "1.0.31" ],
        [ "rustversion", "1.0.14" ],
        [ "unicode-ident", "1.0.11" ]
      ],
      "1.0.66$crates-io": [
        [ "unicode-ident", "1.0.11" ]
      ]
    },
    "quote": {
      "1.0.31": [
        [ "proc-macro2", "1.0.66$crates-io" ]
      ]
    }
  },
  "sources": {
    "proc-macro2": {
      "1.0.66": {
        "hash": "18fb31db3f9bddb2ea821cde30a9f70117e3f119938b5ee630b7403aa6e2ead9",
        "type": "crates-io"
      },
      "1.0.66$crates-io": {
        "hash": "18fb31db3f9bddb2ea821cde30a9f70117e3f119938b5ee630b7403aa6e2ead9",
        "pname": "proc-macro2",
        "type": "crates-io",
        "version": "1.0.66"
      }
    },
    "quote": {
      "1.0.31": {
        "hash": "5fe8a65d69dd0808184ebb5f836ab526bb259db23c657efa38711b1072ee47f0",
        "pname": "quote",
        "type": "crates-io",
        "version": "1.0.31"
      }
    },
    "rustversion": {
      "1.0.14": {
        "hash": "7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4",
        "pname": "rustversion",
        "type": "crates-io",
        "version": "1.0.14"
      }
    },
    "unicode-ident": {
      "1.0.11": {
        "hash": "301abaae475aa91687eb82514b328ab47a211a533026cb25fc3e519b86adfc3c",
        "pname": "unicode-ident",
        "type": "crates-io",
        "version": "1.0.11"
      }
    }
  }
}
