{
  "_generic": {
    "defaultPackage": "proc-macro2",
    "location": "",
    "packages": {
      "proc-macro2": "1.0.63"
    },
    "sourcesAggregatedHash": null,
    "subsystem": "rust"
  },
  "_subsystem": {
    "gitSources": [],
    "meta": {
      "proc-macro2": {
        "1.0.63": {
          "description": "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.", "license": [   "mit",   "asl20"
          ]
        }
      }
    },
    "relPathReplacements": {
      "proc-macro2": {
        "1.0.63": {}
      }
    }
  },
  "cyclicDependencies": {},
  "dependencies": {
    "proc-macro2": {
      "1.0.63": [
        [ "quote", "1.0.29" ],
        [ "rustversion", "1.0.13" ],
        [ "unicode-ident", "1.0.10" ]
      ],
      "1.0.63$crates-io": [
        [ "unicode-ident", "1.0.10" ]
      ]
    },
    "quote": {
      "1.0.29": [
        [ "proc-macro2", "1.0.63$crates-io" ]
      ]
    }
  },
  "sources": {
    "proc-macro2": {
      "1.0.63": {
        "hash": "7b368fba921b0dce7e60f5e04ec15e565b3303972b42bcfde1d0713b881959eb",
        "type": "crates-io"
      },
      "1.0.63$crates-io": {
        "hash": "7b368fba921b0dce7e60f5e04ec15e565b3303972b42bcfde1d0713b881959eb",
        "pname": "proc-macro2",
        "type": "crates-io",
        "version": "1.0.63"
      }
    },
    "quote": {
      "1.0.29": {
        "hash": "573015e8ab27661678357f27dc26460738fd2b6c86e46f386fde94cb5d913105",
        "pname": "quote",
        "type": "crates-io",
        "version": "1.0.29"
      }
    },
    "rustversion": {
      "1.0.13": {
        "hash": "dc31bd9b61a32c31f9650d18add92aa83a49ba979c143eefd27fe7177b05bd5f",
        "pname": "rustversion",
        "type": "crates-io",
        "version": "1.0.13"
      }
    },
    "unicode-ident": {
      "1.0.10": {
        "hash": "22049a19f4a68748a168c0fc439f9516686aa045927ff767eca0a85101fb6e73",
        "pname": "unicode-ident",
        "type": "crates-io",
        "version": "1.0.10"
      }
    }
  }
}
